import { View } from "@tarojs/components";
import classNames from "classnames";
import * as React from "react";
import { useContext } from "react";
import ButtonBase from "../button-base/index.js";
import Sheet from "../sheet/index.js";
import { prefixClassname } from "../styles/index.js";
import ActionSheetContext from "./action-sheet.context.js";
export default function ActionSheetAction(props) {
    const { className, style, disabled, loading, name, value, children, onClick, ...restProps } = props;
    const { onSelect } = useContext(ActionSheetContext);
    return (React.createElement(Sheet.Item, { style: style, className: classNames(prefixClassname("action-sheet__action"), className), disabled: disabled, loading: loading },
        name && React.createElement(View, { className: prefixClassname("action-sheet__name"), children: name }),
        children && (React.createElement(View, { className: prefixClassname("action-sheet__subname"), children: children })),
        React.createElement(ButtonBase, { className: prefixClassname("action-sheet__button"), onClick: (event) => {
                if (!disabled && !loading) {
                    onClick?.(event);
                    onSelect?.({
                        disabled,
                        loading,
                        name,
                        value,
                        children,
                    });
                }
            }, ...restProps })));
}
