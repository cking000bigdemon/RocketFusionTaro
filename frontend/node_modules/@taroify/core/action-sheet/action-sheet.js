import classNames from "classnames";
import * as React from "react";
import Sheet from "../sheet/index.js";
import { prefixClassname } from "../styles/index.js";
import ActionSheetContext from "./action-sheet.context.js";
import ActionSheetHeader from "./action-sheet-header.js";
import ActionSheetAction from "./action-sheet-action.js";
import SafeArea from "../safe-area/index.js";
function ActionSheet({ description, cancelText, actions, className, onSelect, children: childrenProp, safeArea = "bottom", ...restProps }) {
    const renderChildren = () => {
        if (childrenProp) {
            return childrenProp;
        }
        return (React.createElement(React.Fragment, null,
            description && React.createElement(ActionSheetHeader, { children: description }),
            (actions || []).map(({ subname, ...rest }, index) => (React.createElement(ActionSheetAction, { key: `${index}-${subname}`, ...rest, children: subname }))),
            cancelText && React.createElement(Sheet.Button, { type: "cancel", children: cancelText }),
            React.createElement(SafeArea, { position: safeArea })));
    };
    return (React.createElement(ActionSheetContext.Provider, { value: { onSelect } },
        React.createElement(Sheet, { className: classNames(prefixClassname("action-sheet"), className), ...restProps }, renderChildren())));
}
export default ActionSheet;
