import { useUncontrolled } from "@taroify/hooks/index.js";
import { View } from "@tarojs/components";
import classNames from "classnames";
import _isNumber from "lodash/isNumber";
import * as React from "react";
import { useMemo } from "react";
import { prefixClassname } from "../styles/index.js";
import Transition from "../transition/index.js";
import { preventDefault } from "../utils/dom/event.js";
import { useLockScrollTaro } from "../utils/dom/use-lock-scroll-taro.js";
export default function Backdrop(props) {
    const { className, style: styleProp, defaultOpen, open: openProp, closeable = false, lock = true, duration, children, onClick, onClose, ...restProps } = props;
    const { value: open = false, setValue } = useUncontrolled({
        defaultValue: defaultOpen,
        value: openProp,
    });
    useLockScrollTaro(!!open && lock);
    const durationStyle = useMemo(() => (_isNumber(duration) ? { "--animation-duration-base": `${duration}ms` } : {}), [duration]);
    function handleClick(event) {
        onClick?.(event);
        if (closeable) {
            setValue(false);
            onClose?.(false);
        }
    }
    return (React.createElement(Transition, { in: open, appear: true, mountOnEnter: true, timeout: duration, name: "fade" },
        React.createElement(View, { className: classNames(prefixClassname("backdrop"), {
                [prefixClassname("backdrop--open")]: open,
            }, className), style: {
                ...durationStyle,
                ...styleProp,
            }, catchMove: lock, children: children, onClick: handleClick, onTouchMove: preventDefault, ...restProps })));
}
Backdrop.displayName = "Backdrop";
