import { type ButtonProps as TaroButtonProps } from "@tarojs/components";
import { type ReactElement, type ReactNode } from "react";
import { type LoadingProps } from "../loading";
import type { ButtonColor, ButtonFormType, ButtonShape, ButtonSize, ButtonVariant, IconPosition } from "./button.shared";
export interface ButtonProps extends Omit<TaroButtonProps, "size" | "formType" | "type" | "loading" | "plain"> {
    variant?: ButtonVariant;
    shape?: ButtonShape;
    size?: ButtonSize;
    color?: ButtonColor;
    formType?: ButtonFormType;
    loading?: boolean | LoadingProps | ReactElement;
    block?: boolean;
    hairline?: boolean;
    disabled?: boolean;
    icon?: ReactNode;
    iconPosition?: IconPosition;
    children?: ReactNode;
}
export default function Button(props: ButtonProps): JSX.Element;
export declare function createButton(children: ReactNode | ButtonProps, props?: ButtonProps): JSX.Element;
