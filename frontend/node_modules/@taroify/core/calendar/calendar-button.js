import classNames from "classnames";
import * as React from "react";
import { useContext, useMemo } from "react";
import Button from "../button/index.js";
import { prefixClassname } from "../styles/index.js";
import CalendarContext from "./calendar.context.js";
function CalendarButton(props) {
    const { className, confirmText, confirmDisabledText, type = "confirm", children = "确定", onClick, ...restProps } = props;
    const confirm = type === "confirm";
    const { value: currentValue, type: ctxType, onConfirm } = useContext(CalendarContext);
    const disabled = useMemo(() => {
        if (currentValue) {
            if (ctxType === "range") {
                return !currentValue[0] || !currentValue[1];
            }
            if (ctxType === "multiple") {
                return !currentValue.length;
            }
        }
        return Array.isArray(currentValue) ? currentValue.length === 0 : !currentValue;
    }, [ctxType, currentValue]);
    return (React.createElement(Button, { className: classNames({
            [prefixClassname("calendar__confirm")]: confirm,
        }, className), shape: "round", block: true, disabled: confirm && disabled, color: "primary", onClick: (event) => {
            onClick?.(event);
            if (confirm && !disabled) {
                onConfirm?.();
            }
        }, ...restProps }, props.children ? children : disabled ? confirmDisabledText : confirmText));
}
CalendarButton.defaultProps = {
    type: "confirm",
};
export default CalendarButton;
