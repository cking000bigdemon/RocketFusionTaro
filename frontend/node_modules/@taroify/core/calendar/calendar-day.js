import { View } from "@tarojs/components";
import classNames from "classnames";
import * as React from "react";
import { useCallback, useContext } from "react";
import { prefixClassname } from "../styles/index.js";
import CalendarContext from "./calendar.context.js";
function CalendarDay(props) {
    const { className, style, type, value, top, bottom, children, ...restProps } = props;
    const { type: ctxType, onDayClick } = useContext(CalendarContext);
    const single = ctxType === "single";
    const disabled = type === "disabled";
    const onClick = useCallback(() => {
        if (!disabled) {
            onDayClick?.({
                type,
                value,
                children,
            });
        }
    }, [children, disabled, onDayClick, type, value]);
    const renderContent = () => {
        if (single && type === "active") {
            return (React.createElement(React.Fragment, null,
                top && React.createElement(View, { className: prefixClassname("calendar__day__top"), children: top }),
                React.createElement(View, { className: prefixClassname("calendar__active-day"), children: children }),
                bottom && (React.createElement(View, { className: prefixClassname("calendar__day__bottom"), children: bottom }))));
        }
        return (React.createElement(React.Fragment, null,
            top && React.createElement(View, { className: prefixClassname("calendar__day__top"), children: top }),
            children,
            bottom && React.createElement(View, { className: prefixClassname("calendar__day__bottom"), children: bottom })));
    };
    return (React.createElement(View, { className: classNames(prefixClassname("calendar__day"), {
            [prefixClassname(`calendar__day--${type}`)]: type,
        }, className), style: style, onClick: onClick, ...restProps }, renderContent()));
}
export default CalendarDay;
