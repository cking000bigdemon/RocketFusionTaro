import { View } from "@tarojs/components";
import classNames from "classnames";
import * as React from "react";
import { Children, isValidElement, useContext, useEffect, } from "react";
import { prefixClassname } from "../styles/index.js";
import CalendarButton from "./calendar-button.js";
import CalendarContext from "./calendar.context.js";
function CalendarFooter(props) {
    const { className, children, ...restProps } = props;
    const { notifyConfirm } = useContext(CalendarContext);
    useEffect(() => {
        let hasConfirm = false;
        Children.forEach(children, (child) => {
            if (hasConfirm) {
                return;
            }
            if (isValidElement(child)) {
                const element = child;
                const { type: elementType, props } = element;
                if (elementType === CalendarButton) {
                    const button = props;
                    if (button.type === "confirm") {
                        hasConfirm = true;
                    }
                }
            }
        });
        notifyConfirm?.(hasConfirm);
    }, [children, notifyConfirm]);
    return (React.createElement(View, { className: classNames(prefixClassname("calendar__footer"), className), children: children, ...restProps }));
}
export default CalendarFooter;
