import { View } from "@tarojs/components";
import classNames from "classnames";
import * as React from "react";
import { prefixClassname } from "../styles/index.js";
function findDividerText(node) {
    if (node === undefined) {
        return {
            children: undefined,
        };
    }
    if (!React.isValidElement(node)) {
        return {
            children: node,
        };
    }
    const element = node;
    if (element.type !== Divider.Text) {
        return {
            children: node,
        };
    }
    const { props } = element;
    const { orientation } = props;
    return {
        orientation,
        children: element,
    };
}
function Divider(props) {
    const { className, dashed = false, hairline = true, type = "horizontal", children: childrenProp, ...restProps } = props;
    const { orientation = "center", children } = findDividerText(childrenProp);
    return (React.createElement(View, { className: classNames(prefixClassname("divider"), {
            [prefixClassname("divider--hairline")]: hairline && !dashed,
            [prefixClassname("divider--dashed")]: dashed,
            [prefixClassname("divider--vertical")]: type === "vertical",
            [prefixClassname("divider--content-left")]: children && orientation === "left",
            [prefixClassname("divider--content-center")]: children && orientation === "center",
            [prefixClassname("divider--content-right")]: children && orientation === "right",
        }, className), children: children, ...restProps }));
}
(function (Divider) {
    function Text(props) {
        const { children } = props;
        return children;
    }
    Divider.Text = Text;
})(Divider || (Divider = {}));
export default Divider;
