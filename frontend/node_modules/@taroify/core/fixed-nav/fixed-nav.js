import * as React from "react";
import { Fragment, isValidElement } from "react";
import { View, Image, Text } from "@tarojs/components";
import classNames from "classnames";
import { ArrowLeft } from "@taroify/icons/index.js";
import { prefixClassname } from "../styles/index.js";
import Backdrop from "../backdrop/index.js";
const FixedNav = (props) => {
    const { className, style, open = false, backdrop = true, position = {
        top: "auto",
        bottom: "auto",
    }, type = "right", activeText = "收起导航", inactiveText = "快速导航", data = [], content, children, onChange, onClick, } = props;
    const onValueChange = (val) => {
        onChange?.(val);
    };
    return (React.createElement(View, { className: classNames(prefixClassname("fixed-nav"), {
            [prefixClassname("fixed-nav--active")]: open,
            [prefixClassname("fixed-nav--left")]: type === "left",
            [prefixClassname("fixed-nav--right")]: type === "right",
        }, className), style: {
            ...position,
            ...style,
        } },
        React.createElement(View, { className: classNames(prefixClassname("fixed-nav_btn")), onClick: () => onValueChange(!open) }, content || (React.createElement(Fragment, null,
            React.createElement(ArrowLeft, { color: "#fff", className: classNames(prefixClassname("fixed-nav_btn-icon")) }),
            React.createElement(View, { className: classNames(prefixClassname("fixed-nav_btn-text")) }, open ? activeText : inactiveText)))),
        React.createElement(View, null, children || (React.createElement(View, { className: classNames(prefixClassname("fixed-nav_content")) }, data.map((item, index) => (React.createElement(View, { key: item.id || index, className: classNames(prefixClassname("fixed-nav_content--item")), onClick: () => onClick?.(item) },
            isValidElement(item.icon) ? (item.icon) : (React.createElement(Image, { src: item.icon, className: classNames(prefixClassname("fixed-nav_content--img")) })),
            React.createElement(Text, { className: classNames(prefixClassname("fixed-nav_content--text")) }, item.text))))))),
        backdrop && React.createElement(Backdrop, { closeable: true, open: open, onClose: onValueChange })));
};
export default FixedNav;
