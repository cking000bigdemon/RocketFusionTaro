import { View } from "@tarojs/components";
import classNames from "classnames";
import _isString from "lodash/isString";
import _isObject from "lodash/isObject";
import * as React from "react";
import { useRef } from "react";
import SafeArea from "../safe-area/index.js";
import { prefixClassname } from "../styles/index.js";
import { useHeight } from "../hooks/index.js";
import { addUnitPx } from "../utils/format/unit.js";
import mergeStyle from "../utils/merge-style.js";
function useFixedViewPlaceholder(placeholder) {
    if (placeholder === true) {
        return {
            className: prefixClassname("fixed-view__placeholder"),
        };
    }
    if (_isString(placeholder)) {
        return {
            className: placeholder,
        };
    }
    if (_isObject(placeholder)) {
        return placeholder;
    }
}
function FixedView(props) {
    const { className, position, safeArea, nativeSafeTop, placeholder: placeholderProp, children, ...restProps } = props;
    const rootRef = useRef();
    const placeholder = useFixedViewPlaceholder(placeholderProp);
    const height = useHeight(rootRef);
    if (position !== "top" && position !== "bottom" && position !== true) {
        return children;
    }
    const content = (React.createElement(View, { ref: rootRef, className: classNames(prefixClassname("fixed-view"), {
            [prefixClassname("fixed-view--top")]: position === "top",
            [prefixClassname("fixed-view--bottom")]: position === "bottom" || position === true,
        }, className), ...restProps },
        safeArea === "top" && React.createElement(SafeArea, { position: "top", nativeSafeTop: nativeSafeTop }),
        children,
        safeArea === "bottom" && React.createElement(SafeArea, { position: "bottom" })));
    if (placeholder) {
        const { className: placeholderClassName, style: styleProp, ...restPlaceholder } = placeholder;
        const style = mergeStyle(styleProp, height ? { height: addUnitPx(height) } : {});
        return (React.createElement(View, { className: classNames(prefixClassname("fixed-view__placeholder"), placeholderClassName), style: style, children: content, ...restPlaceholder }));
    }
    return content;
}
export default FixedView;
