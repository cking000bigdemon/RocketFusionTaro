import { View } from "@tarojs/components";
import classNames from "classnames";
import _isFunction from "lodash/isFunction";
import * as React from "react";
import { Children, isValidElement, useContext, useMemo, } from "react";
import Input from "../input/index.js";
import { prefixClassname } from "../styles/index.js";
import { doFormControlHandler } from "./control/index.js";
import FormItemContext from "./form-item.context.js";
import FormContext from "./form.context.js";
function FormControl(props) {
    const { className, name, value, disabled, align: alignProp, children = React.createElement(Input, null), onChange: onDelegatingChange, onBlur: onDelegatingBlur, ...restProps } = props;
    const { name: formName, controlAlign } = useContext(FormContext);
    const align = alignProp ?? controlAlign;
    const { validateStatus } = useContext(FormItemContext);
    const field = useMemo(() => {
        if (_isFunction(children)) {
            return children?.({
                name,
                value: formName ? value : undefined,
                validateStatus,
                disabled,
                onChange: onDelegatingChange,
                onBlur: onDelegatingBlur,
            });
        }
        return Children.map(children, (child) => {
            if (!isValidElement(child)) {
                return child;
            }
            const element = child;
            return doFormControlHandler(element, {
                name,
                value,
                validateStatus,
                disabled,
                onChange: onDelegatingChange,
                onBlur: onDelegatingBlur,
            });
        });
    }, [
        children,
        formName,
        name,
        onDelegatingBlur,
        onDelegatingChange,
        validateStatus,
        disabled,
        value,
    ]);
    return (React.createElement(View, { className: classNames(prefixClassname("form-control"), {
            [prefixClassname("form-control--left")]: align === "left",
            [prefixClassname("form-control--center")]: align === "center",
            [prefixClassname("form-control--right")]: align === "right",
        }, className), children: field, ...restProps }));
}
export default FormControl;
