import { useCallback, useContext, useEffect, useRef, } from "react";
import FormContext from "./form.context.js";
import useForm from "./use-form.js";
function useFormFieldValueEffect(effect, deps) {
    const { name: formName } = useContext(FormContext);
    const form = useForm(formName);
    const mountedRef = useRef(false);
    const onReset = useCallback(() => (mountedRef.current = false), []);
    useEffect(() => {
        form?.addEventListener("reset", onReset);
        return () => form?.removeEventListener("reset", onReset);
    }, [form, onReset]);
    useEffect(() => {
        if (mountedRef.current) {
            effect?.();
        }
        else {
            mountedRef.current = true;
        }
    }, deps);
}
export default useFormFieldValueEffect;
