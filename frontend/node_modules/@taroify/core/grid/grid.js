import { View } from "@tarojs/components";
import classNames from "classnames";
import * as React from "react";
import { Children, cloneElement, useMemo, } from "react";
import { prefixClassname } from "../styles/index.js";
import { HAIRLINE_BORDER_TOP } from "../styles/hairline.js";
import { addUnitPx } from "../utils/format/unit.js";
import GridContext from "./grid.context.js";
const DEFAULT_GRID_COLUMNS = 4;
function Grid(props) {
    const { className, style: styleProp, columns = DEFAULT_GRID_COLUMNS, gutter, bordered = true, centered = true, clickable = false, direction = "vertical", square, children: childrenProp, ...restProps } = props;
    const children = useMemo(() => Children.map(childrenProp, (item, index) => item ? cloneElement(item, { __dataIndex__: index }) : null), [childrenProp]);
    const rootStyle = useMemo(() => {
        const style = {
            ...styleProp,
        };
        if (gutter) {
            style.paddingLeft = addUnitPx(gutter);
        }
        return style;
    }, [gutter, styleProp]);
    return (React.createElement(View, { style: rootStyle, className: classNames(prefixClassname("grid"), {
            [HAIRLINE_BORDER_TOP]: bordered && gutter === undefined,
        }, className), ...restProps },
        React.createElement(GridContext.Provider, { value: {
                bordered,
                centered,
                columns,
                clickable,
                direction,
                gutter,
                square,
            } }, children)));
}
export default Grid;
