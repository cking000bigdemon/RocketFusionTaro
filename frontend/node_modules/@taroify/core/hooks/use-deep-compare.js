import { useRef, useMemo, useEffect, useCallback } from "react";
import isEqual from "lodash/isEqual";
function createDeepCompare(deps) {
    const ref = useRef();
    const signalRef = useRef(0);
    if (deps === undefined || !isEqual(deps, ref.current)) {
        ref.current = deps;
        signalRef.current += 1;
    }
    return [signalRef.current];
}
export function useDeepCompareEffect(effect, deps) {
    return useEffect(effect, createDeepCompare(deps));
}
export function useDeepCompareMemo(factory, deps) {
    return useMemo(factory, createDeepCompare(deps));
}
export function useDeepCompareCallback(callback, deps) {
    return useCallback(callback, createDeepCompare(deps));
}
