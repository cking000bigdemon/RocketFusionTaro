import { useState, useCallback, useRef } from "react";
import { nextTick } from "@tarojs/taro";
import { getRect } from "../utils/dom/rect.js";
import { useRenderedEffect, useMounted, useWindowResize } from "./index.js";
export default function useHeight(elementOrRef, deps) {
    const [height, _setHeight] = useState(0);
    const heightRef = useRef(0);
    const setHeight = useCallback(() => {
        getRect(elementOrRef)
            .then((rect) => rect?.height)
            .then((val) => {
            if (val !== heightRef.current) {
                heightRef.current = val;
                _setHeight(val);
            }
        });
    }, []);
    useRenderedEffect(() => {
        setHeight();
    }, deps);
    useMounted(() => {
        nextTick(setHeight);
    });
    useWindowResize(setHeight);
    return height;
}
