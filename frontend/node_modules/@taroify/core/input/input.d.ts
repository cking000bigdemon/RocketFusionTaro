import type { ITouchEvent } from "@tarojs/components";
import type { BaseEventOrig } from "@tarojs/components/types/common";
import type { InputProps as TaroInputProps } from "@tarojs/components/types/Input";
import { type ReactNode } from "react";
import type { InputAlign, InputClearTrigger, InputColor } from "./input.shared";
export declare function resolveOnChange<E extends TaroInputProps.inputEventDetail | TaroInputProps.inputValueEventDetail, E2 extends TaroInputProps.inputEventDetail | TaroInputProps.inputValueEventDetail>(e: BaseEventOrig<E>, onChange: undefined | ((event: BaseEventOrig<E2>) => void), detailValue?: string): void;
export interface InputProps extends TaroInputProps {
    placeholderClassName?: string;
    readonly?: boolean;
    align?: InputAlign;
    color?: InputColor;
    clearable?: boolean;
    clearIcon?: ReactNode;
    clearTrigger?: InputClearTrigger;
    onClear?(event: ITouchEvent): void;
    onChange?(event: BaseEventOrig<TaroInputProps.inputEventDetail>): void;
}
declare function Input(props: InputProps): JSX.Element;
export default Input;
