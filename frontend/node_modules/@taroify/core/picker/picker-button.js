import { View } from "@tarojs/components";
import classNames from "classnames";
import * as React from "react";
import { useContext } from "react";
import { prefixClassname } from "../styles/index.js";
import PickerContext from "./picker.context.js";
export var PickerButtonType;
(function (PickerButtonType) {
    PickerButtonType["Cancel"] = "cancel";
    PickerButtonType["Confirm"] = "confirm";
})(PickerButtonType || (PickerButtonType = {}));
export default function PickerButton(props) {
    const { type = PickerButtonType.Cancel, children, onClick } = props;
    const { onCancel, onConfirm } = useContext(PickerContext);
    return (React.createElement(View, { className: classNames({
            [prefixClassname("picker__cancel")]: type === PickerButtonType.Cancel,
            [prefixClassname("picker__confirm")]: type === PickerButtonType.Confirm,
        }), children: children, onClick: (e) => {
            onClick?.(e);
            if (type === PickerButtonType.Cancel) {
                onCancel?.();
            }
            else if (type === PickerButtonType.Confirm) {
                onConfirm?.();
            }
        } }));
}
