import { View } from "@tarojs/components";
import classNames from "classnames";
import * as React from "react";
import { isValidElement, useMemo, useContext } from "react";
import { prefixClassname } from "../styles/index.js";
import { isTextElement } from "../utils/validate/index.js";
import PickerContext from "./picker.context.js";
export default function PickerOption(props) {
    const { className, disabled, index, value, label, children: childrenProp, ...restProps } = props;
    const { optionHeight } = useContext(PickerContext);
    const children = useMemo(() => {
        if (isValidElement(childrenProp)) {
            return childrenProp;
        }
        if (isTextElement(childrenProp)) {
            return React.createElement(View, { className: prefixClassname("ellipsis") }, childrenProp);
        }
        if (isValidElement(label)) {
            return label;
        }
        if (isTextElement(label)) {
            return React.createElement(View, { className: prefixClassname("ellipsis") }, label);
        }
    }, [childrenProp, label]);
    return (React.createElement(View, { className: classNames(prefixClassname("picker-option"), {
            [prefixClassname("picker-option--disabled")]: disabled,
        }, className), style: {
            height: `${optionHeight}px`,
        }, children: children, ...restProps }));
}
