import type { Key, ReactNode } from "react";
export declare const DEFAULT_SIBLING_COUNT = 3;
export declare const DEFAULT_OPTION_HEIGHT = 44;
export interface PickerOptionData {
    [x: string]: any;
    value?: string;
    label?: ReactNode;
    disabled?: boolean;
}
export interface PickerOptionObject extends Record<string, any> {
    key?: Key;
    index: number;
    value?: any;
    disabled?: boolean;
    label?: ReactNode;
    children?: ReactNode;
}
export interface PickerColumnInstance {
    stopMomentum(): void;
}
export type PickerThemeVars = {
    pickerBackgroundColor?: string;
    pickerToolbarHeight?: string;
    pickerTitleFontSize?: string;
    pickerTitleLineHeight?: string;
    pickerActionPadding?: string;
    pickerActionFontSize?: string;
    pickerConfirmActionColor?: string;
    pickerCancelActionColor?: string;
    pickerSwipeTransitionDuration?: string;
    pickerColumnTransitionZeroDuration?: string;
    pickerColumnTransitionSwitchDuration?: string;
    pickerColumnTransitionDuration?: string;
    pickerOptionColor?: string;
    pickerOptionPadding?: string;
    pickerOptionFontSize?: string;
    pickerOptionDisabledOpacity?: number;
    pickerOptionHeight?: string;
    pickerLoadingIconColor?: string;
    pickerLoadingMaskColor?: string;
};
export declare function validPickerColumn(column: PickerOptionObject): PickerOptionObject | undefined;
export declare function getPickerOptionKey(option: PickerOptionObject): any;
export declare function getPickerValue(values: any, multiColumns: boolean): any;
