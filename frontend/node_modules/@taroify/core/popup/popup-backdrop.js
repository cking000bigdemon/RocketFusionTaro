import _isUndefined from "lodash/isUndefined";
import _isNull from "lodash/isNull";
import _isBoolean from "lodash/isBoolean";
import * as React from "react";
import { cloneElement, useContext, useMemo, } from "react";
import { default as SharedBackdrop } from "../backdrop/index.js";
import PopupContext from "./popup.context.js";
export default function PopupBackdrop(props) {
    const { open: openProp = true, duration, closeable = true, lock, ...restProps } = props;
    const { open, duration: ctxDuration, onClose } = useContext(PopupContext);
    return (React.createElement(SharedBackdrop, { open: openProp && open, lock: lock, duration: duration ?? ctxDuration, closeable: closeable, onClose: onClose, ...restProps }));
}
PopupBackdrop.displayName = "PopupBackdrop";
export function usePopupBackdrop(backdrop = React.createElement(PopupBackdrop, null), options) {
    return useMemo(() => {
        if (_isUndefined(options) || _isNull(options)) {
            return backdrop;
        }
        if (_isBoolean(options) && options) {
            return cloneElement(backdrop, { open: true });
        }
        if (_isBoolean(options) && !options) {
            return cloneElement(backdrop, { open: false });
        }
        return cloneElement(backdrop, { ...options, open: true });
    }, [backdrop, options]);
}
