import { View } from "@tarojs/components";
import classNames from "classnames";
import * as React from "react";
import { useMemo } from "react";
import { prefixClassname } from "../styles/index.js";
function Progress(props) {
    const { className, animated, striped, inactive, label, color = "primary", percent: percentProp = 0, ...restProps } = props;
    const percent = Math.min(Math.max(0, percentProp), 100);
    function renderLabel() {
        if (label === undefined) {
            return `${percent}%`;
        }
        else if (!label) {
            return undefined;
        }
        return label;
    }
    const barStyle = useMemo(() => ({
        width: `${percent}%`,
    }), [percent]);
    return (React.createElement(View, { className: classNames(prefixClassname("progress"), {
            [prefixClassname("progress--inactive")]: inactive,
            [prefixClassname("progress--striped")]: !inactive && striped,
            [prefixClassname("progress--animated")]: !inactive && striped && animated,
            [prefixClassname("progress--primary")]: !inactive && color === "primary",
            [prefixClassname("progress--info")]: !inactive && color === "info",
            [prefixClassname("progress--success")]: !inactive && color === "success",
            [prefixClassname("progress--warning")]: !inactive && color === "warning",
            [prefixClassname("progress--danger")]: !inactive && color === "danger",
        }, className), ...restProps },
        React.createElement(View, { className: classNames(prefixClassname("progress__portion")), style: barStyle }, renderLabel())));
}
export default Progress;
