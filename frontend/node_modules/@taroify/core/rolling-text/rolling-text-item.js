import * as React from "react";
import { useMemo } from "react";
import { View } from "@tarojs/components";
import classNames from "classnames";
import { prefixClassname } from "../styles/index.js";
import { addUnitPx } from "../utils/format/unit.js";
const RollingTextItem = (props) => {
    const { figureArr = [], delay, duration = 2, isStart, direction = "down", height = 40 } = props;
    const newFigureArr = useMemo(() => (direction === "down" ? figureArr.slice().reverse() : figureArr), [direction, figureArr]);
    const translatePx = useMemo(() => {
        const totalHeight = height * (figureArr.length - 1);
        return `-${totalHeight}px`;
    }, [height, figureArr]);
    const itemStyle = useMemo(() => ({
        lineHeight: addUnitPx(height),
    }), [height]);
    const rootStyle = useMemo(() => ({
        height: addUnitPx(height),
        "--rolling-text-translate": translatePx,
        "--rolling-text-duration": `${duration}s`,
        "--rolling-text-delay": `${delay}s`,
    }), [height, translatePx, duration, delay]);
    return (React.createElement(View, { className: classNames(prefixClassname("rolling-text-item"), prefixClassname(`rolling-text-item--${direction}`)), style: rootStyle },
        React.createElement(View, { className: classNames(prefixClassname("rolling-text-item__box"), {
                animate: isStart,
            }) }, Array.isArray(newFigureArr) &&
            newFigureArr.map((v, i) => (React.createElement(View, { className: classNames(prefixClassname("rolling-text-item__item")), style: itemStyle, key: i }, v))))));
};
export default RollingTextItem;
