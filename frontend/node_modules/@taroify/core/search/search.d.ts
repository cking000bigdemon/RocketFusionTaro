import { type ITouchEvent } from "@tarojs/components";
import type { BaseEventOrig } from "@tarojs/components/types/common";
import type { InputProps } from "@tarojs/components/types/Input";
import type { ViewProps } from "@tarojs/components/types/View";
import type { ReactElement, ReactNode, ReactText } from "react";
import type { FormFeedbackProps } from "../form";
import { type InputAlign, type InputClearTrigger, type InputColor } from "../input";
import type { SearchShape } from "./search.shared";
interface SearchProps extends ViewProps {
    className?: string;
    value?: string;
    icon?: ReactNode;
    rightIcon?: ReactNode;
    label?: ReactNode;
    shape?: SearchShape;
    maxlength?: number;
    autoFocus?: boolean;
    focus?: boolean;
    disabled?: boolean;
    readonly?: boolean;
    enableNative?: boolean;
    placeholder?: string;
    placeholderClassName?: string;
    inputAlign?: InputAlign;
    inputColor?: InputColor;
    clearable?: boolean;
    clearIcon?: ReactNode;
    clearTrigger?: InputClearTrigger;
    feedback?: ReactText | FormFeedbackProps | ReactElement;
    action?: boolean | ReactNode;
    onClear?(event: ITouchEvent): void;
    onCancel?(event: ITouchEvent): void;
    onSearch?(event: BaseEventOrig<InputProps.inputValueEventDetail>): void;
    onChange?(event: BaseEventOrig<InputProps.inputEventDetail>): void;
    onFocus?(event: BaseEventOrig<InputProps.inputForceEventDetail>): void;
    onBlur?(event: BaseEventOrig<InputProps.inputValueEventDetail>): void;
}
declare function Search(props: SearchProps): JSX.Element;
export default Search;
