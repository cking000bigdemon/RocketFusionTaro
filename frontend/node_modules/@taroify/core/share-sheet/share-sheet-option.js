import { cloneIconElement, isIconElement } from "@taroify/icons/utils/index.js";
import { View } from "@tarojs/components";
import classNames from "classnames";
import _isString from "lodash/isString";
import * as React from "react";
import { cloneElement, isValidElement, useContext, useMemo, } from "react";
import ButtonBase from "../button-base/index.js";
import Image from "../image/index.js";
import { prefixClassname } from "../styles/index.js";
import ShareSheetContext from "./share-sheet.context.js";
const PRESET_ICONS = [
    "qq",
    "link",
    "weibo",
    "wechat",
    "poster",
    "qrcode",
    "weapp-qrcode",
    "wechat-moments",
];
function renderShareSheetOptionIcon(node) {
    if (!isValidElement(node)) {
        if (_isString(node) && PRESET_ICONS.includes(node)) {
            return renderShareSheetOptionIcon(React.createElement(Image, { src: `https://img.yzcdn.cn/vant/share-sheet-${node}.png` }));
        }
        return node;
    }
    const element = node;
    if (element.type === Image) {
        return cloneElement(element, {
            className: classNames(element.props.className, prefixClassname("share-sheet__option-icon")),
        });
    }
    else if (isIconElement(element)) {
        return cloneIconElement(element, { className: prefixClassname("share-sheet__option-icon") });
    }
    return node;
}
function useShareSheetOptionIcon(node) {
    return useMemo(() => renderShareSheetOptionIcon(node), [node]);
}
export function ShareSheetOption(props) {
    const { className, style, value, icon, name, description, onClick, ...restProps } = props;
    const { onSelect } = useContext(ShareSheetContext);
    const image = useShareSheetOptionIcon(icon);
    return (React.createElement(View, { className: classNames(prefixClassname("share-sheet__option"), className), style: style, ...restProps },
        icon && image,
        name && React.createElement(View, { className: prefixClassname("share-sheet__option-name"), children: name }),
        description && (React.createElement(View, { className: prefixClassname("share-sheet__option-description"), children: description })),
        React.createElement(ButtonBase, { className: prefixClassname("share-sheet__button"), onClick: (event) => {
                onClick?.(event);
                onSelect?.({
                    value,
                    icon,
                    name,
                    description,
                });
            }, ...restProps })));
}
export default ShareSheetOption;
