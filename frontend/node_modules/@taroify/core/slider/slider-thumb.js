import { View } from "@tarojs/components";
import classNames from "classnames";
import * as React from "react";
import { useContext } from "react";
import { prefixClassname } from "../styles/index.js";
import { stopPropagation } from "../utils/dom/event.js";
import { getSizeStyle } from "../utils/format/unit.js";
import SliderContext from "./slider.context.js";
function SliderThumb(props) {
    const { className, size, index, children, ...restProps } = props;
    const { onTouchStart, onTouchMove, onTouchEnd } = useContext(SliderContext);
    return (React.createElement(View, { className: classNames({
            [prefixClassname("slider__thumb-wrapper")]: index === undefined,
            [prefixClassname("slider__thumb-wrapper-left")]: index === 0,
            [prefixClassname("slider__thumb-wrapper-right")]: index === 1,
        }), style: {
            ...getSizeStyle(size),
        }, catchMove: true, onTouchStart: (event) => onTouchStart?.(event, index), onTouchMove: (event) => onTouchMove?.(event, index), onTouchEnd: (event) => onTouchEnd?.(event, index), onTouchCancel: (event) => onTouchEnd?.(event, index), onClick: stopPropagation }, children ?? (React.createElement(View, { className: classNames(prefixClassname("slider__thumb"), className), ...restProps }))));
}
export default SliderThumb;
