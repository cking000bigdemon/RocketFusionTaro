import { View } from "@tarojs/components";
import classNames from "classnames";
import _range from "lodash/range";
import * as React from "react";
import { useCallback, useContext, useMemo } from "react";
import { prefixClassname } from "../styles/index.js";
import SwiperContext from "./swiper.context.js";
export default function SwiperIndicator(props) {
    const { className, children, ...restProps } = props;
    const { indicator = 0, direction, count } = useContext(SwiperContext);
    const renderIndicator = useCallback((index) => (React.createElement(View, { key: index, className: classNames(prefixClassname("swiper__indicator"), {
            [prefixClassname("swiper__indicator--active")]: index === indicator,
        }) })), [indicator]);
    const indicators = useMemo(() => !children && _range(0, count).map(renderIndicator), [children, count, renderIndicator]);
    return (React.createElement(View, { className: classNames({
            [prefixClassname("swiper__indicators")]: !children,
            [prefixClassname("swiper__indicators--vertical")]: !children && direction === "vertical",
        }, className), children: children ?? indicators, ...restProps }));
}
