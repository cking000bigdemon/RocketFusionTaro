import { useUncontrolled } from "@taroify/hooks/index.js";
import { View } from "@tarojs/components";
import classNames from "classnames";
import * as React from "react";
import Loading from "../loading/index.js";
import { prefixClassname } from "../styles/index.js";
import { addUnitPx } from "../utils/format/unit.js";
function Switch(props) {
    const { className, style, defaultChecked, checked: checkedProp, loading = false, disabled = false, size, onChange: onChangeProp, onClick, ...restProps } = props;
    const { value: checked = false, setValue } = useUncontrolled({
        value: checkedProp,
        defaultValue: defaultChecked,
        onChange: onChangeProp,
    });
    function handleClick(event) {
        onClick?.(event);
        if (disabled || loading) {
            return;
        }
        setValue(!checked);
    }
    return (React.createElement(View, { className: classNames(prefixClassname("switch"), {
            [prefixClassname("switch--checked")]: checked,
            [prefixClassname("switch--loading")]: loading,
            [prefixClassname("switch--disabled")]: disabled,
        }, className), style: {
            fontSize: addUnitPx(size),
            ...style,
        }, onClick: handleClick, ...restProps },
        React.createElement(View, { className: prefixClassname("switch__node") }, loading && React.createElement(Loading, { className: prefixClassname("switch__loading") }))));
}
export default Switch;
