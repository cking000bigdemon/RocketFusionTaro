import { View } from "@tarojs/components";
import classNames from "classnames";
import * as React from "react";
import { cloneElement, isValidElement, useContext } from "react";
import Badge from "../badge/index.js";
import { prefixClassname } from "../styles/index.js";
import TabbarContext from "./tabbar.context.js";
export default function TabbarItem(props) {
    const { className, icon: iconProp, value: valueProp, badge, children, onClick, ...restProps } = props;
    const { value, onItemClick } = useContext(TabbarContext);
    const active = value === valueProp;
    const icon = isValidElement(iconProp)
        ? cloneElement(iconProp, {
            className: classNames(iconProp.props.className, prefixClassname("tabbar-item__icon")),
        })
        : iconProp;
    return (React.createElement(View, { className: classNames(prefixClassname("tabbar-item"), {
            [prefixClassname("tabbar-item--active")]: active,
        }, className), onClick: (event) => {
            onClick?.(event);
            onItemClick?.(valueProp);
        }, ...restProps },
        icon && React.createElement(Badge, { content: badge, children: icon }),
        React.createElement(View, { className: prefixClassname("tabbar-item__label"), children: children })));
}
