import { Cross } from "@taroify/icons/index.js";
import { cloneIconElement } from "@taroify/icons/utils/index.js";
import { View } from "@tarojs/components";
import classNames from "classnames";
import * as React from "react";
import { prefixClassname } from "../styles/index.js";
function Tag(props) {
    const { className, variant = "contained", size = "small", color = "default", shape = "square", closeable, closeIcon = React.createElement(Cross, null), onClose, children, ...restProps } = props;
    return (React.createElement(View, { className: classNames(prefixClassname("tag"), {
            [prefixClassname("tag--outlined")]: variant === "outlined",
            [prefixClassname("tag--medium")]: size === "medium",
            [prefixClassname("tag--large")]: size === "large",
            [prefixClassname("tag--default")]: color === "default",
            [prefixClassname("tag--primary")]: color === "primary",
            [prefixClassname("tag--info")]: color === "info",
            [prefixClassname("tag--success")]: color === "success",
            [prefixClassname("tag--warning")]: color === "warning",
            [prefixClassname("tag--danger")]: color === "danger",
            [prefixClassname("tag--rounded")]: shape === "rounded",
            [prefixClassname("tag--rounded-right")]: shape === "roundedRight",
            [prefixClassname("tag--rounded-left")]: shape === "roundedLeft",
        }, className), ...restProps },
        children,
        closeable &&
            cloneIconElement(closeIcon, {
                className: prefixClassname("tag__close"),
                onClick: onClose,
            })));
}
export default Tag;
