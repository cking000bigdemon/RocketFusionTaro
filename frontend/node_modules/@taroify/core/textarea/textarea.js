import { useUncontrolled } from "@taroify/hooks/index.js";
import { View } from "@tarojs/components";
import classNames from "classnames";
import _isNumber from "lodash/isNumber";
import * as React from "react";
import { prefixClassname } from "../styles/index.js";
import NativeTextarea from "./native-textarea.js";
import { getStringLength } from "./textarea.shared.js";
function Textarea(props) {
    const { className, placeholderClass, value: valueProp, readonly, disabled, limit, maxlength: maxlengthProp, onInput, onChange, ...restProps } = props;
    const maxlength = _isNumber(limit) ? limit : maxlengthProp;
    const { value, setValue } = useUncontrolled({ value: valueProp });
    return (React.createElement(View, { className: prefixClassname("textarea__wrapper") },
        React.createElement(NativeTextarea, { className: classNames(prefixClassname("textarea"), {
                [prefixClassname("textarea--readonly")]: readonly,
            }, className), placeholderClass: classNames(prefixClassname("textarea__placeholder"), {
                [prefixClassname("textarea__placeholder--readonly")]: readonly,
            }, placeholderClass), disabled: readonly || disabled, readonly: readonly, maxlength: maxlength, value: value, onInput: (e) => {
                setValue(e.detail.value);
                onInput?.(e);
                onChange?.(e);
            }, ...restProps }),
        limit && (React.createElement(View, { className: prefixClassname("textarea__limit") },
            getStringLength(value),
            "/",
            maxlength))));
}
export default Textarea;
