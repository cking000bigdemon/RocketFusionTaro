import type { ReactNode } from "react";
import Popup from "../popup";
import { type ToastProps } from "./toast";
import { closeToast, openToast, resetDefaultToastOptions, setDefaultToastOptions, allowMultiple } from "./toast.imperative";
import type { ToastOptions } from "./toast.shared";
export type { ToastType, ToastPosition, ToastThemeVars, ToastOptions } from "./toast.shared";
interface ToastInterface {
    (props: ToastProps): JSX.Element;
    Backdrop: typeof Popup.Backdrop;
    open: typeof openToast;
    loading(option: ReactNode | Omit<ToastOptions, "type">): string | undefined;
    success(option: ReactNode | Omit<ToastOptions, "type">): string | undefined;
    fail(option: ReactNode | Omit<ToastOptions, "type">): string | undefined;
    close: typeof closeToast;
    setDefaultOptions: typeof setDefaultToastOptions;
    resetDefaultOptions: typeof resetDefaultToastOptions;
    allowMultiple: typeof allowMultiple;
}
declare const Toast: ToastInterface;
export default Toast;
