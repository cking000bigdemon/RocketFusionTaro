import { Description } from "@taroify/icons/index.js";
import { View } from "@tarojs/components";
import classNames from "classnames";
import * as React from "react";
import { useContext } from "react";
import Image from "../image/index.js";
import { prefixClassname } from "../styles/index.js";
import UploaderRemove from "./uploader-remove.js";
import UploaderContext from "./uploader.context.js";
import { isImageFile } from "./uploader.utils.js";
function UploaderImage(props) {
    const { className, type, url, name, removable: removableProp, mode, alt, round, children, onRemove, ...restProps } = props;
    const { removable: ctxRemovable } = useContext(UploaderContext);
    const removable = removableProp ?? ctxRemovable;
    function renderFile() {
        if (isImageFile({ type, url })) {
            return (React.createElement(Image, { wrapperClassName: prefixClassname("uploader__preview-image-wrapper"), className: prefixClassname("uploader__preview-image"), src: url, mode: mode, alt: alt, round: round }));
        }
        return (React.createElement(View, { className: prefixClassname("uploader__file") },
            React.createElement(Description, { className: prefixClassname("uploader__file-icon") }),
            React.createElement(View, { className: classNames(prefixClassname("uploader__file-name"), prefixClassname("ellipsis")), children: name ?? url })));
    }
    return (React.createElement(View, { className: classNames(prefixClassname("uploader__preview"), className), ...restProps },
        renderFile(),
        children,
        removable && React.createElement(UploaderRemove, { onClick: onRemove })));
}
export default UploaderImage;
