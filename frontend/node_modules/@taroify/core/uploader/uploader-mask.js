import { cloneIconElement, isIconElement } from "@taroify/icons/utils/index.js";
import { View } from "@tarojs/components";
import classNames from "classnames";
import * as React from "react";
import { cloneElement, isValidElement } from "react";
import Loading from "../loading/index.js";
import { prefixClassname } from "../styles/index.js";
function renderIcon(icon) {
    if (isIconElement(icon)) {
        return cloneIconElement(icon, { className: prefixClassname("uploader__mask-icon") });
    }
    if (isValidElement(icon) && icon.type === Loading) {
        const { className, ...restProps } = icon.props;
        return cloneElement(icon, {
            ...restProps,
            className: classNames(prefixClassname("uploader__loading"), className),
        });
    }
}
function UploaderMask(props) {
    const { className, icon, message } = props;
    return (React.createElement(View, { className: classNames(prefixClassname("uploader__mask"), className) },
        renderIcon(icon),
        message && React.createElement(View, { className: prefixClassname("uploader__mask-message"), children: message })));
}
export default UploaderMask;
