import { Photograph } from "@taroify/icons/index.js";
import { cloneIconElement } from "@taroify/icons/utils/index.js";
import { View } from "@tarojs/components";
import classNames from "classnames";
import * as React from "react";
import { useContext } from "react";
import { prefixClassname } from "../styles/index.js";
import UploaderContext from "./uploader.context.js";
function UploaderUpload(props) {
    const { className, readonly, icon = React.createElement(Photograph, null), onClick, children, ...restProps } = props;
    const { disabled, onUpload } = useContext(UploaderContext);
    function handleClick(event) {
        onClick?.(event);
        if (!readonly && !disabled) {
            onUpload?.();
        }
    }
    if (children) {
        return React.createElement(View, { onClick: handleClick }, children);
    }
    return (React.createElement(View, { className: classNames(prefixClassname("uploader__upload"), {
            [prefixClassname("uploader__upload--readonly")]: readonly,
        }, className), onClick: handleClick, ...restProps }, cloneIconElement(icon, { className: prefixClassname("uploader__upload-icon") })));
}
export default UploaderUpload;
