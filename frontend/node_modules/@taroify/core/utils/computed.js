import { useCallback, useMemo } from "react";
class GetterRef {
    getter;
    constructor(getter) {
        this.getter = getter;
    }
    get value() {
        return this.getter();
    }
}
export function useComputed(getter, deps = []) {
    const __getter__ = useCallback(getter, [getter, ...deps]);
    return useMemo(() => {
        return new GetterRef(__getter__);
    }, [__getter__]);
}
