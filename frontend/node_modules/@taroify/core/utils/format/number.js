import _toNumber from "lodash/toNumber";
import _padStart from "lodash/padStart";
import _toString from "lodash/toString";
function trimExtraChar(value, char, regExp) {
    const index = value.indexOf(char);
    if (index === -1) {
        return value;
    }
    if (char === "-" && index !== 0) {
        return value.slice(0, index);
    }
    return value.slice(0, index + 1) + value.slice(index).replace(regExp, "");
}
export function formatNumber(value, allowDot = true, allowMinus = true) {
    let valueCache = value;
    if (allowDot) {
        valueCache = trimExtraChar(valueCache, ".", /\./g);
    }
    else {
        valueCache = valueCache.split(".")[0];
    }
    if (allowMinus) {
        valueCache = trimExtraChar(valueCache, "-", /-/g);
    }
    else {
        valueCache = valueCache.replace(/-/, "");
    }
    const regExp = allowDot ? /[^-0-9.]/g : /[^-0-9]/g;
    return valueCache.replace(regExp, "");
}
export function addNumber(num1, num2) {
    const cardinal = 10 ** 10;
    return Math.round((_toNumber(num1) + _toNumber(num2)) * cardinal) / cardinal;
}
export function padZero(num, targetLength = 2) {
    return _padStart(_toString(num), targetLength, "0");
}
