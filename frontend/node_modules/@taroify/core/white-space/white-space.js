import { View } from "@tarojs/components";
import classNames from "classnames";
import * as React from "react";
import { useMemo } from "react";
import { prefixClassname } from "../styles/index.js";
export var WhiteSpaceSize;
(function (WhiteSpaceSize) {
    WhiteSpaceSize["Mini"] = "mini";
    WhiteSpaceSize["Small"] = "small";
    WhiteSpaceSize["Medium"] = "medium";
    WhiteSpaceSize["Large"] = "large";
})(WhiteSpaceSize || (WhiteSpaceSize = {}));
const SIZE_PRESETS = [
    WhiteSpaceSize.Mini,
    WhiteSpaceSize.Small,
    WhiteSpaceSize.Medium,
    WhiteSpaceSize.Large,
];
function isPresetSize(size) {
    return SIZE_PRESETS.includes(size);
}
export default function WhiteSpace(props) {
    const { size = WhiteSpaceSize.Medium } = props;
    const rootStyle = useMemo(() => ({ height: isPresetSize(size) ? "" : size }), [size]);
    return (React.createElement(View, { className: classNames(prefixClassname("white-space"), {
            [prefixClassname(`white-space-size-${size}`)]: isPresetSize(size),
        }), style: rootStyle }));
}
